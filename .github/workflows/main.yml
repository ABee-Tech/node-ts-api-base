name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11.6-alpine
        env:
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          POSTGRES_USER: postgres
        ports: 
          - "5432:5432"

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x' # TODO: match nvmrc version
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Lint
        run: yarn lint
      - name: Run tests
        run: |
          echo TYPEORM_PASSWORD=${{ secrets.TEST_POSTGRES_PASSWORD }} >> .env.ci
          yarn test:ci
      # Another existing action, this one to checkout the repository
      - name: "Checkout repository on branch: ${{ github.REF }}"
        uses: actions/checkout@v2
        with:
          ref: ${{ github.REF }}
          fetch-depth: 0
      # Before running the scan, typescript must be installed from npm and
      # NODE_PATH env var must point to tsc bin folder, otherways typescript static analysis will fail
      - name: "Run Sonarqube analysis of the branch"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn install 
          yarn run build
          echo "::set-env name=NODE_PATH::$(which tsc)"
          sonar-scanner -Dsonar.verbose=false -Dsonar.qualitygate.wait=true -Dsonar.host.url=${{ secrets.SONAR_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY }} -Dsonar.scm.provider=git -Dsonar.java.binaries=/tmp -Dsonar.nodejs.executable=$(which node) -Dsonar.projectVersion=$(echo $GITHUB_SHA | cut -c1-8) -Dsonar.sources=. -Dsonar.projectBaseDir=.